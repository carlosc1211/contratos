Ext.onReady(function(){
	Ext.QuickTips.init();
	//--------------------------------------------------------
	var panelGrafica = new Ext.Panel({
		id: 'panelGrafica',
		width: 780,
		height: 400,
		layout: 'fit',
		renderTo:'container'
	});
	//--------------------------------------------------------
	function crearGraficaTorta(array, titulo, subtitulo) {
		var now = new Date();
		chart = new Highcharts.Chart({
			colors: [	'#4572A7','#AA4643','#89A54E','#80699B','#3D96AE',
						'#DB843D','#92A8CD','#A47D7C','#B5CA92','#058DC7',
						'#50B432','#ED561B','#DDDF00','#24CBE5','#64E572',
						'#FF9655','#FFF263','#6AF9C4','#CD5C5C','#FF0000',
						'#FF1493','#FF4500','#FFD700','#FFEFD5','#BDB76B',
						'#E6E6FA','#4B0082','#ADFF2F','#2E8B57','#66CDAA',
						'#00FFFF','#1E90FF','#000080','#B0C4DE','#FFDEAD',
						'#BC8F8F','#D2691E','#A52A2A','#2F4F4F','#FAEBD7'],
			chart: {
				renderTo: 'panelGrafica',
				plotBackgroundColor: null,
				plotBorderWidth: null,
				plotShadow: false
			},
			//labelFormatter:"if (this.percentage >= 5) return this.percentage.toFixed(1)+'%'",
			//tooltipFormatter:"return '<b>'+this.point.name+':</b> '+this.y+' ('+this.percentage.toFixed(1)+'%)'",

			title: {
				text: titulo
			},
			subtitle: {
				text: subtitulo
			},
			credits: {
				text: 'http://orimat100/gesdoc '+now.format("d/m/Y H:i:s"),
				href: ''
			},
			tooltip: {
				formatter: function () {
					return /*'<b>' + this.point.name + '</b>: ' +*/ this.percentage.toFixed(1) + '%';
				}
			},
			plotOptions: {
				pie: {
					stacking:'percent',
					allowPointSelect: true,
					cursor: 'pointer',
					dataLabels: {
						enabled: true,
						color: '#000000',
						connectorColor: '#000000',
						formatter: function () {
							return /*'<b>' + this.point.name + '</b>: ' + */this.percentage.toFixed(1) + '%';
						}
					},
					showInLegend: true
				}
			},
			exporting: {
				url: 'http://167.175.215.199/exporting-server/index.php'
			},
			series: [{
				type: 'pie',
				name: 'Browser share',
				data: array
			}]
		});
	}//--------------------------------------------------------
	function crearGraficaBarraMulti(array, titulo, subtitulo) {
		var now = new Date();
		chart = new Highcharts.Chart({
			colors: [	'#4572A7','#AA4643','#89A54E','#80699B','#3D96AE',
						'#DB843D','#92A8CD','#A47D7C','#B5CA92','#058DC7', 
						'#50B432','#ED561B','#DDDF00','#24CBE5','#64E572', 
						'#FF9655','#FFF263','#6AF9C4','#CD5C5C','#FF0000',
						'#FF1493','#FF4500','#FFD700','#FFEFD5','#BDB76B',
						'#E6E6FA','#4B0082','#ADFF2F','#2E8B57','#66CDAA',
						'#00FFFF','#1E90FF','#000080','#B0C4DE','#FFDEAD',
						'#BC8F8F','#D2691E','#A52A2A','#2F4F4F','#FAEBD7'],
			chart: {
				renderTo: 'panelGrafica',
				defaultSeriesType: 'column'
			},
			title: {
				text: titulo
			},
			subtitle: {
				text: subtitulo
			},
			xAxis: {
				categories:array.categoria,
				labels: {
					rotation: -45,
					align: 'right',
					style: {
						font: 'normal 10px Verdana, sans-serif'
					}
				 }
			},
			yAxis: {
				min: 0,
				allowDecimals: false,
				title: {
					text: 'Cantidad (Nro)'
				}
			},
			credits: {
				text: 'http://orimat100/gesdoc '+now.format("d/m/Y H:i:s"),
				href: ''
			},
			tooltip: {
				formatter: function () {
					return '' + this.series.name + ': ' + this.y + '';
				}
			},
			exporting: {
				url: 'http://167.175.215.199/exporting-server/index.php'
			},
			plotOptions: {
				/*series: {
					stacking: 'normal'					
				 },*/
				column: {
					dataLabels: {
						color: '#000000',
						enabled: true,
						style: {
							font: 'normal 8px Verdana, sans-serif'
						}
					},
					pointPadding: 0.2,
					borderWidth: 0
				}
			},
			series: array.data
		});
	}
	//--------------------------------------------------------
	function crearGraficaBarra(array, titulo, subtitulo) {
		var now = new Date();
		chart = new Highcharts.Chart({
			colors: [	'#4572A7','#AA4643','#89A54E','#80699B','#3D96AE',
						'#DB843D','#92A8CD','#A47D7C','#B5CA92','#058DC7', 
						'#50B432','#ED561B','#DDDF00','#24CBE5','#64E572', 
						'#FF9655','#FFF263','#6AF9C4','#CD5C5C','#FF0000',
						'#FF1493','#FF4500','#FFD700','#FFEFD5','#BDB76B',
						'#E6E6FA','#4B0082','#ADFF2F','#2E8B57','#66CDAA',
						'#00FFFF','#1E90FF','#000080','#B0C4DE','#FFDEAD',
						'#BC8F8F','#D2691E','#A52A2A','#2F4F4F','#FAEBD7'],
			chart: {
				renderTo: 'panelGrafica',
				defaultSeriesType: 'column'
			},
			title: {
				text: titulo
			},
			subtitle: {
				text: subtitulo
			},
			xAxis: {
				categories: [
				' ']
			},
			yAxis: {
				min: 0,
				allowDecimals: false,
				title: {
					text: 'Cantidad (Nro)'
				}
			},
			credits: {
				text: 'http://orimat100/gesdoc '+now.format("d/m/Y H:i:s"),
				href: ''
			},
			tooltip: {
				formatter: function () {
					return '' + this.series.name + ': ' + this.y + '';
				}
			},
			exporting: {
				url: 'http://167.175.215.199/exporting-server/index.php'
			},
			plotOptions: {
				column: {
					dataLabels: {
						color: '#000000',
						enabled: true,
						style: {
							font: 'normal 12px Verdana, sans-serif'
						}
					},
					pointPadding: 0.2,
					borderWidth: 0
				}
			},
			series: array
		});
	}
	//--------------------------------------------------------
	function crearGraficaLinea(array, titulo, subtitulo) {
		var now = new Date();
		chart = new Highcharts.Chart({
			chart: {
				renderTo: 'panelGrafica',
				defaultSeriesType: 'line'
			},
			title: {
				text: titulo
			},
			subtitle: {
				text: subtitulo
			},
			xAxis: {
				categories:array.categoria
      },
			yAxis: {
				min: 0,
				allowDecimals: false,
				title: {
					text: 'Cantidad (Nro)'
				}
			},
			credits: {
				text: 'http://orimat100/gesdoc '+now.format("d/m/Y H:i:s"),
				href: ''
			},
			tooltip: {
				formatter: function () {
					return '' + this.series.name + ': ' + this.y + '';
				}
			},
			exporting: {
				url: 'http://167.175.215.199/exporting-server/index.php'
			},
			plotOptions: {
         line: {
            dataLabels: {
               enabled: true
            },
            enableMouseTracking: false
         }
      },
			series: array.data
		});
	}
	//--------------------------------------------------------
	function crearGrafica(tipoGrafica, titulo, subtitulo){
		Ext.Ajax.request({
			url: '../php/generador_grafica.php',
			success: function(response){
				array = Ext.decode(response.responseText);
				switch(tipoGrafica){
					case 1:
						crearGraficaLinea(array,titulo,subtitulo);
					break;
					case 2:
						if(Ext.getCmp('base_grafica').getValue()<7)
							crearGraficaBarra(array,titulo,subtitulo);
						else
							crearGraficaBarraMulti(array,titulo,subtitulo);
					break;
					case 3:
						crearGraficaTorta(array,titulo,subtitulo);
					break;
				}
			},
			params:{
				tipo:tipoGrafica,
				base:   Ext.getCmp('base_grafica').getValue(),
				estado:   Ext.getCmp('estado_grafica').getValue(),
				localidad:   Ext.getCmp('localidad_grafica').getValue(),
				fe_ini: Ext.getCmp('inifecha').getRawValue(),
				fe_fin: Ext.getCmp('finfecha').getRawValue()
			},
			failure: function(){
				//console.log('failure');
			}
		});
	}
	//--------------------------------------------------------
	var chart = new Highcharts.Chart({
		chart: {
			renderTo: 'panelGrafica',
			defaultSeriesType: 'column'
		},
		title: {
			text: ''
		},
		subtitle: {
			text: ''
		},
		xAxis: {
			categories: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],
			title: {
				text: null
			}
		},
		yAxis: {
			min: 0,
			title: {
				text: 'Cantidad (Nro)',
				align: 'high'
			}
		},
		tooltip: {
			formatter: function () {
				return '' + this.series.name + ': ' + this.y + ' millions';
			}
		},
		plotOptions: {
			bar: {
				dataLabels: {
					enabled: true
				}
			}
		},
		/*legend: {
			layout: 'vertical',
			align: 'right',
			verticalAlign: 'top',
			x: -5,
			y: -5,
			floating: true,
			borderWidth: 1,
			backgroundColor: '#FFFFFF',
			shadow: true
		},*/
		credits: {
			enabled: false
		},
		series: [/*{
			name: 'Year 1800',
			data: [20,50,10,80,45]
		}*/]
	});
	//--------------------------------------------------------
	store=new Ext.data.ArrayStore({
					id: 0,
					fields: ['id','valor'],
					data: 	[[1, 'Estado'],
							[2, 'Localidad'],
							[3, 'Departamento'],
							[4, 'Tipo de Documento'],
							[5, 'Prioridad'],
							[6, 'Estado - Localidad'],
							[7, 'Departamento - Prioridad']]
				});
	var DataLineal = 	[[1, 'Diario'],
					[2, 'Semanal'],
					[3, 'Mensual']];
	var DataBarra = [[1, 'Estado'],
				[2, 'Localidad'],
				[3, 'Departamento'],
				[4, 'Tipo de Documento'],
				[5, 'Prioridad'],
				[6, 'Estado - Localidad'],
				[7, 'Departamento - Prioridad'],
				[8, 'Gestionados']];
	var DataCircular = [[1, 'Estado'],
				[2, 'Localidad'],
				[3, 'Departamento'],
				[4, 'Tipo de Documento'],
				[5, 'Prioridad'],
				[6, 'Estado - Localidad']];
	var storeEstado = new Ext.data.JsonStore({
						fields: ['co_estado', 'nb_estado_graf'],
						root: 'data',
						url: '../php/combos_dinamicos.php?accion=cmb_estado_graf',
						baseParams:{tipo_estado:1}
					});
	var storeLocalidad = new Ext.data.JsonStore({
						fields: ['co_distrito', 'nb_distrito'],
						root: 'data',
						url: '../php/combos_dinamicos.php?accion=cmb_distrito',
						baseParams:{tipo_estado:1}
					});
	//--------------------------------------------------------
	var panel = new Ext.FormPanel({
		renderTo: 'gen_graf',
		id: 'ges_documento',
		title: 'Gr&aacute;ficas',
		bodyStyle: 'padding:4px',
		width: 800,
		labelWidth: 100,
		frame: true,
		layout: 'fit',
		items:[{
			xtype: 'fieldset',
			title: 'Datos de Entrada',
			collapsible:false,
			border: true,
			autoHeight:true, 
			bodyStyle:'padding:0px',
			items:[{
                xtype: 'label',
                text: 'Rango de Fechas'
            },{
                xtype: 'datefield',
                fieldLabel: 'Desde',
                anchor:'30%',
                name: 'inifecha',
                id: 'inifecha'
            },{
                xtype: 'datefield',
                fieldLabel: 'Hasta',
                anchor:'30%',
                name: 'finfecha',
                id: 'finfecha'
            },{
				xtype: 'combo',
				id: 'tipo_grafica',
				anchor: '30%',
				name: 'nb_distrito',
				fieldLabel: 'Reporte de',
				//hiddenName: 'nb_distrito',
				valueField: 'id',
				store: new Ext.data.ArrayStore({
					id: 0,
					fields: ['id','valor'],
					data: 	[[1, 'LINEAL'],
							[2, 'BARRAS'],
							[3, 'CIRCULAR']]
				}),
				mode: 'local',
				triggerAction: 'all',
				typeAhead: true,
				displayField: 'valor',
				width: 120,
				tabIndex: 10,
				selectOnFocus: true,
				emptyText: 'Seleccione...',
				forceSelection: true,
				editable: false,
				allowBlank: false,
				},{
				xtype: 'combo',
				id: 'tipo_grafica',
				anchor: '30%',
				name: 'nb_distrito',
				fieldLabel: 'Tipo de Gr&aacute;fica',
				//hiddenName: 'nb_distrito',
				valueField: 'id',
				store: new Ext.data.ArrayStore({
					id: 0,
					fields: ['id','valor'],
					data: 	[[1, 'LINEAL'],
							[2, 'BARRAS'],
							[3, 'CIRCULAR']]
				}),
				mode: 'local',
				triggerAction: 'all',
				typeAhead: true,
				displayField: 'valor',
				width: 120,
				tabIndex: 10,
				selectOnFocus: true,
				emptyText: 'Seleccione...',
				forceSelection: true,
				editable: false,
				allowBlank: false,
				/*listeners: {
					select: {
						fn: function(combo,record,index){
							Ext.getCmp('base_grafica').clearValue();
							Ext.getCmp('estado_grafica').clearValue();
							Ext.getCmp('localidad_grafica').clearValue();
							store.removeAll();
							switch(index){
								case 0:
									Ext.getCmp('base_grafica').disable();
									Ext.getCmp('estado_grafica').disable();
									Ext.getCmp('localidad_grafica').enable();
									store.loadData(DataLineal);
									storeLocalidad.load({});
								break;
								case 1:
									Ext.getCmp('base_grafica').enable();
									Ext.getCmp('localidad_grafica').disable();
									store.loadData(DataBarra);
									storeLocalidad.load({});
								break;
								case 2:
									Ext.getCmp('base_grafica').enable();
									Ext.getCmp('localidad_grafica').disable();
									store.loadData(DataCircular);
								break;
							}
						}
					}
				}*/
			},{
				xtype: 'combo',
				id: 'base_grafica',
				anchor: '30%',
				name: 'base_grafica',
				fieldLabel: 'Dato Base',
				disabled:true,
				//hiddenName: 'nb_distrito',
				valueField: 'id',
				store:store,
				mode: 'local',
				triggerAction: 'all',
				listWidth:150,
				typeAhead: true,
				displayField: 'valor',
				width: 120,
				tabIndex: 10,
				selectOnFocus: true,
				emptyText: 'Seleccione...',
				forceSelection: true,
				editable: false,
				allowBlank: false,
				listeners: {
					select: {
						fn: function(combo,record,index){
							Ext.getCmp('estado_grafica').enable();
							if(index==0){
								Ext.getCmp('estado_grafica').clearValue();
								Ext.getCmp('estado_grafica').disable();
								Ext.getCmp('localidad_grafica').enable();
							}
							else{
								Ext.getCmp('estado_grafica').enable();
								Ext.getCmp('localidad_grafica').disable();
							}
							if(index==1){
								Ext.getCmp('estado_grafica').clearValue();
								Ext.getCmp('estado_grafica').disable();
							}
							if(index==5){
								storeEstado.load({params:{tipo_estado:2}});
							}
							else{
								storeLocalidad.load({});
								storeEstado.load({params:{tipo_estado:1}});
							}
							if(index==7){
								Ext.getCmp('estado_grafica').clearValue();
								Ext.getCmp('estado_grafica').disable();
							}
						}
					}
				}
			},{
				xtype: 'combo',
				id: 'localidad_grafica',
				anchor: '30%',
				name: 'localidad_grafica',
				fieldLabel: 'Localidad',
				disabled:true,
				//hiddenName: 'nb_distrito',
				valueField: 'co_distrito',
				store: storeLocalidad,
				mode: 'local',
				triggerAction: 'all',
				typeAhead: true,
				displayField: 'nb_distrito',
				width: 120,
				listWidth: 250,
				tabIndex: 10,
				selectOnFocus: true,
				emptyText: 'Seleccione...',
				forceSelection: true,
				editable: false,
				allowBlank: false
			},{
				xtype: 'combo',
				id: 'estado_grafica',
				anchor: '30%',
				name: 'estado_grafica',
				fieldLabel: 'Estado',
				disabled:true,
				//hiddenName: 'nb_distrito',
				valueField: 'co_estado',
				store: storeEstado,
				mode: 'local',
				triggerAction: 'all',
				typeAhead: true,
				displayField: 'nb_estado_graf',
				width: 120,
				listWidth: 250,
				tabIndex: 10,
				selectOnFocus: true,
				emptyText: 'Seleccione...',
				forceSelection: true,
				editable: false,
				allowBlank: false
			},
//------------------------------------------------Boton---------------------------------------------------------			
			{
                xtype: 'button',
                text: 'Graficar',
                handler: function(){
					tipoGrafica=Ext.getCmp('tipo_grafica').getValue();
					cad='';
					if(Ext.getCmp('base_grafica').getValue()!=1){
						cad=Ext.getCmp('estado_grafica').getRawValue();
						if(cad=='""')
							cad='Recibidos'
					}		
							
					titulo='Documentos '+cad+' por '+Ext.getCmp('base_grafica').getRawValue();
					if(tipoGrafica==1){
						titulo='Documentos Recibidos y Revisados';
					}
					if(Ext.getCmp('base_grafica').getValue()==8){
						titulo='Documentos Gestionados';
					}
					if(Ext.getCmp('localidad_grafica').getValue()!=''){
						titulo+=' (Localidad '+Ext.getCmp('localidad_grafica').getRawValue()+')';
					}
					subtitulo='Desde '+Ext.getCmp('inifecha').getRawValue()+' al '+Ext.getCmp('finfecha').getRawValue();
					crearGrafica(tipoGrafica, titulo, subtitulo);
				}
            }]
		},panelGrafica]
	});
});
